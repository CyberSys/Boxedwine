pipeline {
    agent { label 'mac' }

    stages {
        stage('Test') {
            steps {
                sh '''#!/bin/bash
                   export PATH=/bin:/usr/bin:/usr/local/bin:/Users/alla/homebrew/bin
                   cd project/mac-xcode
                   /bin/bash buildTest.sh || exit
                   bin/BoxedwineTest.app/Contents/MacOS/BoxedwineTest
                '''
            }
        }
        stage('Build') {
            steps {
               sh '''#!/bin/bash
                   export PATH=/bin:/usr/bin:/usr/local/bin:/Users/alla/homebrew/bin
                   cd project/mac-xcode
                   /bin/bash buildRelease.sh
                '''           
            }
        }
        stage('Build x64 Core') {
            steps {
               sh '''#!/bin/bash
                   export PATH=/bin:/usr/bin:/usr/local/bin:/Users/alla/homebrew/bin
                   cd project/mac-xcode
                   /bin/bash buildReleaseX64.sh
                '''           
            }
        }        
    }

    post {
        changed {
            script {
                if ("${env.BRANCH_NAME}" == 'master') {
                    emailext subject: '$DEFAULT_SUBJECT',
                        body: '$DEFAULT_CONTENT',
                        recipientProviders: [
                            [$class: 'CulpritsRecipientProvider'],
                            [$class: 'DevelopersRecipientProvider'],
                            [$class: 'RequesterRecipientProvider']
                        ], 
                        replyTo: '$DEFAULT_REPLYTO',
                        to: '$DEFAULT_RECIPIENTS'
                } else {
                    emailext subject: '$DEFAULT_SUBJECT',
                        body: '$DEFAULT_CONTENT',
                        recipientProviders: [
                            [$class: 'DevelopersRecipientProvider'],
                            [$class: 'RequesterRecipientProvider']
                        ], 
                        replyTo: '$DEFAULT_REPLYTO'
                }
            }
        }
    }
}